[{"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/index.js":"1","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/App.js":"2","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Cell.js":"3","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Board.js":"4","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Game.js":"5","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Settings.js":"6","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/utils.js":"7","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/GameControls.js":"8","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/hmm.js":"9"},{"size":236,"mtime":1607643568200,"results":"10","hashOfConfig":"11"},{"size":1763,"mtime":1607737998000,"results":"12","hashOfConfig":"11"},{"size":681,"mtime":1607738118180,"results":"13","hashOfConfig":"11"},{"size":1141,"mtime":1607737283280,"results":"14","hashOfConfig":"11"},{"size":5059,"mtime":1607737283300,"results":"15","hashOfConfig":"11"},{"size":2770,"mtime":1607732172540,"results":"16","hashOfConfig":"11"},{"size":646,"mtime":1607733752230,"results":"17","hashOfConfig":"11"},{"size":717,"mtime":1607733303250,"results":"18","hashOfConfig":"11"},{"size":0,"mtime":1607730604020,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jpdmor",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/index.js",[],["40","41"],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/App.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Cell.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Board.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Game.js",["42"],"import React from \"react\";\nimport Board from \"./Board\";\nimport GameControls from \"./GameControls\";\nimport { calculateManhattanDistance, getRandomInt } from \"./utils\";\nimport * as hmm from \"./hmm\"; \n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let boardProbabilities = initializeProbabilityDistribution(props.rows, props.cols);\n        let boardManhattanDistanceArray = initializeBoardManhattanDistanceArray(props.rows, props.cols);\n\n        let ghostPosRow = getRandomInt(0, props.rows - 1);\n        let ghostPosCol = getRandomInt(0, props.cols - 1);\n\n        this.state = {\n            boardProbabilities, ghostPosRow, ghostPosCol, boardManhattanDistanceArray,\n            isGhostFound: false,\n            attempts: 0,\n            movesMade: 0,\n            rows: props.rows,\n            cols: props.cols,\n            distanceMedium : props.distanceMedium,\n            distanceFar : props.distanceFar\n        }\n    }\n\n    initializeGame = (props) => {\n        let boardProbabilities = initializeProbabilityDistribution(props.rows, props.cols);\n        let boardManhattanDistanceArray = initializeBoardManhattanDistanceArray(props.rows, props.cols);\n\n        let ghostPosRow = getRandomInt(0, props.rows - 1);\n        let ghostPosCol = getRandomInt(0, props.cols - 1);\n\n        this.setState({\n            boardProbabilities, ghostPosRow, ghostPosCol, boardManhattanDistanceArray,\n            isGhostFound: false,\n            attempts: 0,\n            movesMade: 0,\n            rows: props.rows,\n            cols: props.cols,\n            distanceMedium : props.distanceMedium,\n            distanceFar : props.distanceFar\n        })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"componentWillReceiveProps for Game.js. Nextprops: \", nextProps);\n        console.log(\"State: \", this.state);\n        this.initializeGame(nextProps)\n\n    }\n\n    handleBoardClick(row, col) {\n        console.log(`Handle click called for ${row},${col}`);\n        let manhattanDistance = calculateManhattanDistance(row, col, this.state.ghostPosRow, this.state.ghostPosCol);\n\n        let manhattanDistanceArray = this.state.boardManhattanDistanceArray;\n        manhattanDistanceArray[row][col] = manhattanDistance;\n\n        //todo update probability distribution\n\n        this.setState({\n            manhattanDistanceArray\n        })\n        \n    }\n\n    handleAdvanceTime() {\n        console.log(\"Advance time called\");\n    }\n\n    handleRevealGhost() {\n        console.log(`Ghost is located in (${this.state.ghostPosRow},${this.state.ghostPosCol})`);\n    }\n\n    handleCatchGhost() {\n        console.log(\"Catch ghost handler called\");\n    }\n\n\n    render() {\n\n        let victoryMessage = this.state.isGhostFound === true? \"You Found the ghost!\" : \"\";\n\n        return (\n            <div className=\"game container\">\n                <div className=\"game-board row\">\n                    <div className=\"col-12\">\n                        <Board\n                            boardProbabilities={this.state.boardProbabilities}  // the curly brackets are to imply that javascript code will go here\n                            rows={this.state.rows}\n                            cols={this.state.cols}\n                            boardManhattanDistanceArray={this.state.boardManhattanDistanceArray}\n                            onClick={(row, col) => this.handleBoardClick(row, col)}\n                            distanceMedium={this.state.distanceMedium}\n                            distanceFar={this.state.distanceFar}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"game-controls row\">\n                    <div className=\"col-12\">\n                        <GameControls \n                            onClickAdvanceTime={() => this.handleAdvanceTime()}\n                            onClickRevealGhost={() => this.handleRevealGhost()}\n                            onClickCatchGhost={() => this.handleCatchGhost()}\n                            />\n                    </div>\n\n                </div>\n\n                <div className=\"game-info row\">\n                    <div className=\"col-12\">\n                        {victoryMessage}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\nfunction initializeProbabilityDistribution(rows, cols) {\n    let ghostBoard = new Array(rows);\n\n    let totalCells = rows * cols;\n    let probabilityEachCell = 100 / totalCells;\n\n    for (let i = 0; i < rows; i++) {\n        ghostBoard[i] = new Array(cols)\n\n        for (let j = 0; j < cols; j++) {\n            ghostBoard[i][j] = +probabilityEachCell.toFixed(2); //crops the number to two digits after decimal.\n        }\n    }\n\n    return ghostBoard;\n\n}\n\nfunction initializeBoardManhattanDistanceArray(rows, cols) {\n    let board = new Array(rows);\n\n    for (let i = 0; i < rows; i++) {\n        board[i] = new Array(cols)\n\n        for (let j = 0; j < cols; j++) {\n            board[i][j] = -1;\n        }\n    }\n\n    return board;\n}\n\n","/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/Settings.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/utils.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/GameControls.js",[],"/home/tasin/codes-wsl2/academic-code/ai/hmm-offline-5/src/hmm.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":13,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'hmm' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]